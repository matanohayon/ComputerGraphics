transformations:
rotation, scaling, translation

Set View - projections:
orthographic and/or perspective projections

CGSkelGetObjectColor() should be used to apply all lines with the same color


• Provide a way to control the sensitivity of transformations with respect to mouse
movement. High sensitivity means that a small mouse movement will transform the
object significantly. Make sure the sensitivity is initialized for each model in an intuitive
way (hint: when translating a model, how much it should move for each pixel of a mouse
movement in screen space?)


• Add a button to choose in which space you want to transform the object(s) (object/view
space). 


f the window is resized (enlarged or reduced), the object should be resized while
maintaining its proportions (aspect ratio).


Add a way to see the normals of the polygons of your object. Normals can be provided by
the polygons in the IRIT model (in the Plane field, testing if IP_HAS_PLANE_POLY(Poly) !=
0 on an IPPolygonStruct Poly) or calculated. The face normal can be calculated for
example via a cross product of adjacent, non co-linear, edges in the polygon.


Add a way to see the normals of the vertices of your object. Normals can be provided by
the vertices in the model (in the Normal field, testing if IP_HAS_NORMAL_VRTX(Vrtx) !=
0 on an IPVertexStruct Vrtx). If no normal is found, only issue an error message, once, per
this model.


For both a polygon and a vertex, add an option (one menu item for both) to determine
whether the calculated normal or those provided by the model (if any, and if not – use
the calculated normal, if you do – see also below) are displayed.


Draw the bounding box of the objects, for each object, in the same color as the object
itself, as wireframe as well. The bounding box of an object is the box generated between
the coordinates Qmin(xmin, ymin, zmin) and Qmax(xmax, ymax, zmax) where Qmin is the minimal
value of all the coordinates in the object, and Qmax is the maximal value. Note: when you
translate, rotate, and scale your object, the bounding box is also translated, rotated, and
scaled.



Add a way to control the perspective matrix, i.e. the perspective projection ratio, by
modifying the 'd' variable in the matrix (and other variables to your consideration).


Many objects in Irit are represented by smooth freeform polynomial functions (splines).
When loading these objects they are converted into polygons, the number of polygons is
controlled by some tessellation tolerance attribute, which is stored in CGSkelFFCState
global variable (FineNess member) in iritSkel.cpp file. Provide a way to control this
polygon fineness tolerance, the minimal value is 2, and the default is 20.



Add a way that enables the user to change the wireframe color, the normal color, and the
background color of the window (that will override the model’s original color).
Use CColorDialog to pick the colors.

